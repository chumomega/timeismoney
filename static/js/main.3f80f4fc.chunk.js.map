{"version":3,"sources":["HomeIcon.js","SaveSingleYearPurchase.js","DontSaveSingleYearPurchase.js","SaveMultiYearPurchase.js","DontSaveMultiYearPurchase.js","LandingPage.js","App.js","reportWebVitals.js","index.js"],"names":["HomeIcon","props","navigate","useNavigate","React","SvgIcon","Object","assign","onClick","d","SaveSingleYearPurchase","_React$useState","_React$useState2","_slicedToArray","dollarsPerMonth","setDollarsPerMonth","_React$useState3","_React$useState4","totalCost","setTotalCost","_React$useState5","_React$useState6","apr","setAPR","_React$useState7","_React$useState8","answer","setAnswer","onSubmit","event","preventDefault","periodicRate","x","Math","log","y","Typography","variant","gutterBottom","component","Input","value","required","onChange","target","Button","type","DontSaveSingleYearPurchase","totalDollars","setTotalDollars","SaveMultiYearPurchase","numMonthsSpending","setNumMonthsSpending","numMonthsSpendingDelayed","setNumMonthsSpendingDelayed","_React$useState9","_React$useState10","fv_of_costs","pow","console","concat","num_periods_saving","Number","denom","DontSaveMultiYearPurchase","_React$useState11","_React$useState12","LandingPage","purchaseType","setPurchaseType","savingType","setSavingType","FormControl","FormLabel","id","RadioGroup","aria-labelledby","name","FormControlLabel","control","Radio","label","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","createElement","StrictMode"],"mappings":"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","file":"static/js/main.3f80f4fc.chunk.js","sourcesContent":["import * as React from 'react';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport {useNavigate} from \"react-router\";\n\nfunction HomeIcon(props) {\n  const navigate = useNavigate();\n  \n  return (\n    <SvgIcon {...props} onClick={() => navigate(`/timeismoney/`)}>\n      <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n    </SvgIcon>\n  );\n}\n\nexport default HomeIcon;\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Input from '@mui/material/Input';\nimport HomeIcon from './HomeIcon';\n\nfunction SaveSingleYearPurchase() {\n  const [dollarsPerMonth, setDollarsPerMonth] = React.useState(50);\n  const [totalCost, setTotalCost] = React.useState(5000);\n  const [apr, setAPR] = React.useState(10);\n  const [answer, setAnswer] = React.useState('?');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // manual nper calculation https://www.reddit.com/r/learnmath/comments/isejs0/excel_nper_calculations_manually/\n    let periodicRate = (apr / 100) / 12\n\n    let x = Math.log((-1*dollarsPerMonth/periodicRate - totalCost) / (-1*dollarsPerMonth/periodicRate))\n    let y = Math.log(1 + periodicRate)\n\n    setAnswer(x/y)\n  };\n\n  return (\n    <div>\n      <HomeIcon />\n      <form onSubmit={handleSubmit}>\n        <Typography variant=\"h6\" gutterBottom>Save Money For A Single Year Purchase</Typography>\n        <Typography variant=\"body1\" component={'span'} gutterBottom>\n          If I save <Input value={dollarsPerMonth} required={true} onChange={(event) => {setDollarsPerMonth(event.target.value)}}/> dollars\n          every month, how long will it take me to buy something that\n          costs <Input value={totalCost} required={true} onChange={(event) => {setTotalCost(event.target.value)}}/> dollars?\n          The annual percentage rate (APR) is <Input value={apr} required={true} onChange={(event) => {setAPR(event.target.value)}}/>%.\n        </Typography>\n        <br/>\n        <br/>\n        <Button variant=\"outlined\" type=\"submit\">Submit</Button>\n        <br/>\n        <br/>\n        <Typography variant=\"body1\" gutterBottom>\n          ...It will take you {answer} months.\n        </Typography>\n      </form>\n    </div>\n  );\n}\n\nexport default SaveSingleYearPurchase;\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Input from '@mui/material/Input';\nimport HomeIcon from './HomeIcon';\n\nfunction DontSaveSingleYearPurchase() {\n  const [totalDollars, setTotalDollars] = React.useState(5000);\n  const [totalCost, setTotalCost] = React.useState(5000);\n  const [apr, setAPR] = React.useState(10);\n  const [answer, setAnswer] = React.useState('?');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // manual nper calculation https://www.reddit.com/r/learnmath/comments/isejs0/excel_nper_calculations_manually/\n    let periodicRate = (apr / 100) / 12\n\n    let x = Math.log(totalCost / totalDollars)\n    let y = Math.log(1 + periodicRate)\n\n    setAnswer(x/y)\n  };\n\n  return (\n    <div>\n      <HomeIcon />\n      <form onSubmit={handleSubmit}>\n        <Typography variant=\"h6\" gutterBottom>I Have Money For A Single Year Purchase</Typography>\n        <Typography variant=\"body1\" component={'span'} gutterBottom>\n          If I leave <Input value={totalDollars} required={true} onChange={(event) => {setTotalDollars(event.target.value)}}/> dollars alone, how long will it take me\n          to buy something that costs <Input value={totalCost} required={true} onChange={(event) => {setTotalCost(event.target.value)}}/> dollars?\n          The annual percentage rate (APR) is <Input value={apr} required={true} onChange={(event) => {setAPR(event.target.value)}}/> compounded monthly%.\n        </Typography>\n        <br/>\n        <Button variant=\"outlined\" type=\"submit\">Submit</Button>\n        <br/><br/>\n        <Typography variant=\"body1\" gutterBottom>\n          ...It will take you {answer} months.\n        </Typography>\n      </form>\n    </div>\n  );\n}\n\nexport default DontSaveSingleYearPurchase;\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Input from '@mui/material/Input';\nimport HomeIcon from './HomeIcon';\n\nfunction SaveMultiYearPurchase() {\n  const [dollarsPerMonth, setDollarsPerMonth] = React.useState(50);\n  const [numMonthsSpending, setNumMonthsSpending] = React.useState(10);\n  const [numMonthsSpendingDelayed, setNumMonthsSpendingDelayed] = React.useState(10);\n  const [apr, setAPR] = React.useState(10);\n  const [answer, setAnswer] = React.useState(\"?\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let periodicRate = (apr / 100) / 12\n\n    // Future Value of an Annuity =C (( (1+i)^n - 1 ) / i), where C is the regular payment, i is the annual interest rate or discount rate in decimal, and n is the number of years or periods\n    let fv_of_costs = dollarsPerMonth * ((Math.pow((1+periodicRate), numMonthsSpending) - 1) / periodicRate)\n    console.log(`fv_of_costs is ${fv_of_costs}`)\n\n    let num_periods_saving = Number(numMonthsSpending) + Number(numMonthsSpendingDelayed)\n    console.log(`num_periods_saving is ${num_periods_saving}`)\n\n    let denom = (Math.pow((1+periodicRate), num_periods_saving) - 1) / periodicRate\n    console.log(`denom is ${denom}`)\n    let amt_to_save = fv_of_costs / denom\n\n    setAnswer(amt_to_save)\n  };\n\n  return (\n    <div>\n      <HomeIcon />\n      <form onSubmit={handleSubmit}>\n        <Typography variant=\"h6\" gutterBottom>Save Money For A Multi Year Purchase</Typography>\n        <Typography variant=\"body1\" component={'span'} gutterBottom>\n          How much do I need to save per month to afford something \n          that costs <Input value={dollarsPerMonth} type=\"number\" required={true} onChange={(event) => {setDollarsPerMonth(event.target.value)}}/>\n          dollars every month for <Input value={numMonthsSpending} type=\"number\" required={true} onChange={(event) => {setNumMonthsSpending(event.target.value)}}/> \n          months. I have <Input value={numMonthsSpendingDelayed} type=\"number\" required={true} onChange={(event) => {setNumMonthsSpendingDelayed(event.target.value)}}/>\n          months before I need to start making the payments.\n          The annual percentage rate (APR) is <Input value={apr} type=\"number\" required={true} onChange={(event) => {setAPR(event.target.value)}}/>%.\n        </Typography>\n        <br/>\n        <Button variant=\"outlined\" type=\"submit\">Submit</Button>\n        <br/><br/>\n        <Typography variant=\"body1\" gutterBottom>\n          ...{answer} dollars per month.\n        </Typography>\n      </form>\n    </div>\n  );\n}\n\nexport default SaveMultiYearPurchase;\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Input from '@mui/material/Input';\nimport HomeIcon from './HomeIcon';\n\nfunction DontSaveMultiYearPurchase() {\n  const [totalDollars, setTotalDollars] = React.useState(5000);\n  const [dollarsPerMonth, setNumMonthsSaving] = React.useState(20);\n  const [numMonthsSpending, setNumMonthsSpending] = React.useState(10);\n  const [numMonthsSpendingDelayed, setNumMonthsSpendingDelayed] = React.useState(10);\n  const [apr, setAPR] = React.useState(10);\n  const [answer, setAnswer] = React.useState(\"?\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // let periodicRate = (apr / 100) / 12\n\n    // let x = Math.log(totalCost / totalDollars)\n    // let y = Math.log(1 + periodicRate)\n\n    // setAnswer(x/y)\n  };\n\n  return (\n    <div>\n      <HomeIcon />\n      <Typography variant=\"h6\" gutterBottom>I Have Money For A Multi Year Purchase</Typography>\n      <Typography variant=\"body1\" component={'span'} gutterBottom>\n        If I leave <Input value={totalDollars} required={true}/> dollars alone, how long will it take me to buy \n        something that costs <Input value={dollarsPerMonth} required={true}/> dollars every month \n        for <Input value={numMonthsSpending} required={true}/> months?\n        Assume that I'm saving this amount during the time I'm spending.\n        The annual percentage rate (APR) is <Input value={apr} required={true}/>%.\n      </Typography>\n      <br/>\n      <Button variant=\"outlined\">Submit</Button>\n      <br/><br/>\n      <Typography variant=\"body1\" gutterBottom>\n        ...It will take you {answer} months.\n      </Typography>\n    </div>\n  );\n}\n\nexport default DontSaveMultiYearPurchase;\n","import * as React from 'react';\nimport {useNavigate} from \"react-router\";\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nfunction LandingPage() {\n  const navigate = useNavigate();\n  const [purchaseType, setPurchaseType] = React.useState('a');\n  const [savingType, setSavingType] = React.useState('a');\n\n  const handlePurchaseTypeChange = (event) => {\n    setPurchaseType((event.target).value);\n  };\n\n  const handleSavingTypeChange = (event) => {\n    setSavingType((event.target).value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    navigate(`/timeismoney/${purchaseType}${savingType}`);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h3\" gutterBottom>Time Is Money</Typography>\n\n      <form onSubmit={handleSubmit}>\n        <FormControl>\n          <FormLabel id=\"type-of-purchase-label\">What type of purchase do you want to make?</FormLabel>\n          <RadioGroup\n            aria-labelledby=\"type-of-purchase-label\"\n            name=\"radio-buttons-group1\"\n            value={purchaseType}\n            onChange={handlePurchaseTypeChange}\n          >\n            <FormControlLabel value=\"a\" control={<Radio />} label=\"Single-Year Purchase (ie - trip, property, etc)\" />\n            <FormControlLabel value=\"b\" control={<Radio />} label=\"Multi-Year Purchase (ie - college tuition, property, etc)\" />\n          </RadioGroup>\n          <br/>\n          <FormLabel id=\"type-of-saving-label\">Do you want to save for this purchase or do you have the money set aside?</FormLabel>\n          <RadioGroup\n            aria-labelledby=\"type-of-saving-label\"\n            name=\"radio-buttons-group2\"\n            value={savingType}\n            onChange={handleSavingTypeChange}\n          >\n            <FormControlLabel value=\"a\" control={<Radio />} label=\"Save\" />\n            <FormControlLabel value=\"b\" control={<Radio />} label=\"I have the money\" />\n          </RadioGroup>\n          <br/>\n          <Button variant=\"outlined\" type=\"submit\">Next</Button>\n        </FormControl>\n      </form>\n\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import * as React from 'react';\nimport SaveSingleYearPurchase from './SaveSingleYearPurchase'\nimport DontSaveSingleYearPurchase from './DontSaveSingleYearPurchase'\nimport SaveMultiYearPurchase from './SaveMultiYearPurchase'\nimport DontSaveMultiYearPurchase from './DontSaveMultiYearPurchase'\n\nimport LandingPage from './LandingPage'\n\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    <div>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/timeismoney/\" element={<LandingPage/>} />\n          <Route path=\"/timeismoney/aa\" element={<SaveSingleYearPurchase/>} />\n          <Route path=\"/timeismoney/ab\" element={<DontSaveSingleYearPurchase/>} />\n          <Route path=\"/timeismoney/ba\" element={<SaveMultiYearPurchase/>} />\n          <Route path=\"/timeismoney/bb\" element={<DontSaveMultiYearPurchase/>} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}