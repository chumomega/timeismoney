{"version":3,"sources":["SaveSingleYearPurchase.js","DontSaveSingleYearPurchase.js","SaveMultiYearPurchase.js","DontSaveMultiYearPurchase.js","LandingPage.js","App.js","reportWebVitals.js","index.js"],"names":["SaveSingleYearPurchase","_React$useState","React","_React$useState2","_slicedToArray","dollarsPerMonth","setDollarsPerMonth","_React$useState3","_React$useState4","totalCost","setTotalCost","_React$useState5","_React$useState6","apr","setAPR","_React$useState7","_React$useState8","answer","setAnswer","onSubmit","event","preventDefault","periodicRate","x","Math","log","y","Typography","variant","gutterBottom","component","Input","value","required","onChange","target","Button","type","DontSaveSingleYearPurchase","totalDollars","setTotalDollars","SaveMultiYearPurchase","numMonthsSaving","numMonthsSpending","numMonthsSpendingDelayed","_React$useState9","_React$useState10","_React$useState11","_React$useState12","DontSaveMultiYearPurchase","LandingPage","navigate","useNavigate","purchaseType","setPurchaseType","savingType","setSavingType","concat","FormControl","FormLabel","id","RadioGroup","aria-labelledby","name","FormControlLabel","control","Radio","label","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","createElement","StrictMode"],"mappings":"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","file":"static/js/main.9116e424.chunk.js","sourcesContent":["import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Input from '@mui/material/Input';\n\nfunction SaveSingleYearPurchase() {\n  const [dollarsPerMonth, setDollarsPerMonth] = React.useState(50);\n  const [totalCost, setTotalCost] = React.useState(5000);\n  const [apr, setAPR] = React.useState(10);\n  const [answer, setAnswer] = React.useState('?');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let periodicRate = (apr / 100) / 12\n\n    let x = Math.log((-1*dollarsPerMonth/periodicRate - totalCost) / (-1*dollarsPerMonth/periodicRate))\n    let y = Math.log(1 + periodicRate)\n\n    setAnswer(x/y)\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Typography variant=\"h6\" gutterBottom>Save Money For A Single Year Purchase</Typography>\n        <Typography variant=\"body1\" component={'span'} gutterBottom>\n          If I save <Input value={dollarsPerMonth} required={true} onChange={(event) => {setDollarsPerMonth(event.target.value)}}/> dollars\n          every month, how long will it take me to buy something that\n          costs <Input value={totalCost} required={true} onChange={(event) => {setTotalCost(event.target.value)}}/> dollars?\n          The annual percentage rate (APR) is <Input value={apr} required={true} onChange={(event) => {setAPR(event.target.value)}}/>%.\n        </Typography>\n        <br/>\n        <br/>\n        <Button variant=\"outlined\" type=\"submit\">Submit</Button>\n        <br/>\n        <br/>\n        <Typography variant=\"body1\" gutterBottom>\n          ...It will take you {answer} months.\n        </Typography>\n      </form>\n    </div>\n  );\n}\n\nexport default SaveSingleYearPurchase;\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Input from '@mui/material/Input';\n\nfunction DontSaveSingleYearPurchase() {\n  const [totalDollars, setTotalDollars] = React.useState(5000);\n  const [totalCost, setTotalCost] = React.useState(5000);\n  const [apr, setAPR] = React.useState(10);\n  const [answer, setAnswer] = React.useState('?');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let periodicRate = (apr / 100) / 12\n\n    let x = Math.log(totalCost / totalDollars)\n    let y = Math.log(1 + periodicRate)\n\n    setAnswer(x/y)\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <Typography variant=\"h6\" gutterBottom>I Have Money For A Single Year Purchase</Typography>\n        <Typography variant=\"body1\" component={'span'} gutterBottom>\n          If I leave <Input value={totalDollars} required={true} onChange={(event) => {setTotalDollars(event.target.value)}}/> dollars alone, how long will it take me\n          to buy something that costs <Input value={totalCost} required={true} onChange={(event) => {setTotalCost(event.target.value)}}/> dollars?\n          The annual percentage rate (APR) is <Input value={apr} required={true} onChange={(event) => {setAPR(event.target.value)}}/> compounded monthly%.\n        </Typography>\n        <br/>\n        <Button variant=\"outlined\" type=\"submit\">Submit</Button>\n        <br/><br/>\n        <Typography variant=\"body1\" gutterBottom>\n          ...It will take you {answer} months.\n        </Typography>\n      </form>\n    </div>\n  );\n}\n\nexport default DontSaveSingleYearPurchase;\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Input from '@mui/material/Input';\n\nfunction SaveMultiYearPurchase() {\n  const [dollarsPerMonth, setDollarsPerMonth] = React.useState(50);\n  const [numMonthsSaving, setNumMonthsSaving] = React.useState(20);\n  const [numMonthsSpending, setNumMonthsSpending] = React.useState(10);\n  const [numMonthsSpendingDelayed, setNumMonthsSpendingDelayed] = React.useState(10);\n  const [apr, setAPR] = React.useState(10);\n  const [answer, setAnswer] = React.useState(0);\n  \n  return (\n    <div>\n      <Typography variant=\"h6\" gutterBottom>Save Money For A Multi Year Purchase</Typography>\n      <Typography variant=\"body1\" component={'span'} gutterBottom>\n        How much do I need to save per month for <Input value={numMonthsSaving} required={true}/> months to afford something \n        that costs <Input value={dollarsPerMonth} required={true}/> dollars every month for <Input value={numMonthsSpending} required={true}/> \n        months starting <Input value={numMonthsSpendingDelayed} required={true}/> months \n        from now? The annual percentage rate (APR) is <Input value={apr} required={true}/>%.\n      </Typography>\n      <br/>\n      <Button variant=\"outlined\">Submit</Button>\n      <br/><br/>\n      <Typography variant=\"body1\" gutterBottom>\n        ...{answer} dollars per month.\n      </Typography>\n    </div>\n  );\n}\n\nexport default SaveMultiYearPurchase;\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Input from '@mui/material/Input';\n\nfunction DontSaveMultiYearPurchase() {\n  const [totalDollars, setTotalDollars] = React.useState(5000);\n  const [dollarsPerMonth, setNumMonthsSaving] = React.useState(20);\n  const [numMonthsSpending, setNumMonthsSpending] = React.useState(10);\n  const [numMonthsSpendingDelayed, setNumMonthsSpendingDelayed] = React.useState(10);\n  const [apr, setAPR] = React.useState(10);\n  const [answer, setAnswer] = React.useState(0);\n\n  return (\n    <div>\n      <Typography variant=\"h6\" gutterBottom>I Have Money For A Multi Year Purchase</Typography>\n      <Typography variant=\"body1\" component={'span'} gutterBottom>\n        If I leave <Input value={totalDollars} required={true}/> dollars alone, how long will it take me to buy \n        something that costs <Input value={dollarsPerMonth} required={true}/> dollars every month \n        for <Input value={numMonthsSpending} required={true}/> months \n        starting <Input value={numMonthsSpendingDelayed} required={true}/> months from now?\n        The annual percentage rate (APR) is <Input value={apr} required={true}/>%.\n      </Typography>\n      <br/>\n      <Button variant=\"outlined\">Submit</Button>\n      <br/><br/>\n      <Typography variant=\"body1\" gutterBottom>\n        ...It will take you <Input value={answer} required={true}/> months.\n      </Typography>\n    </div>\n  );\n}\n\nexport default DontSaveMultiYearPurchase;\n","import * as React from 'react';\nimport {useNavigate} from \"react-router\";\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nfunction LandingPage() {\n  const navigate = useNavigate();\n  const [purchaseType, setPurchaseType] = React.useState('a');\n  const [savingType, setSavingType] = React.useState('a');\n\n  const handlePurchaseTypeChange = (event) => {\n    setPurchaseType((event.target).value);\n  };\n\n  const handleSavingTypeChange = (event) => {\n    setSavingType((event.target).value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    navigate(`/timeismoney/${purchaseType}${savingType}`);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h3\" gutterBottom>Time Is Money</Typography>\n\n      <form onSubmit={handleSubmit}>\n        <FormControl>\n          <FormLabel id=\"type-of-purchase-label\">What type of purchase do you want to make?</FormLabel>\n          <RadioGroup\n            aria-labelledby=\"type-of-purchase-label\"\n            name=\"radio-buttons-group1\"\n            value={purchaseType}\n            onChange={handlePurchaseTypeChange}\n          >\n            <FormControlLabel value=\"a\" control={<Radio />} label=\"Single-Year Purchase (ie - trip, property, etc)\" />\n            <FormControlLabel value=\"b\" control={<Radio />} label=\"Multi-Year Purchase (ie - college tuition, property, etc)\" />\n          </RadioGroup>\n          <br/>\n          <FormLabel id=\"type-of-saving-label\">Do you want to save for this purchase or do you have the money set aside?</FormLabel>\n          <RadioGroup\n            aria-labelledby=\"type-of-saving-label\"\n            name=\"radio-buttons-group2\"\n            value={savingType}\n            onChange={handleSavingTypeChange}\n          >\n            <FormControlLabel value=\"a\" control={<Radio />} label=\"Save\" />\n            <FormControlLabel value=\"b\" control={<Radio />} label=\"I have the money\" />\n          </RadioGroup>\n          <br/>\n          <Button variant=\"outlined\" type=\"submit\">Next</Button>\n        </FormControl>\n      </form>\n\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import * as React from 'react';\nimport SaveSingleYearPurchase from './SaveSingleYearPurchase'\nimport DontSaveSingleYearPurchase from './DontSaveSingleYearPurchase'\nimport SaveMultiYearPurchase from './SaveMultiYearPurchase'\nimport DontSaveMultiYearPurchase from './DontSaveMultiYearPurchase'\n\nimport LandingPage from './LandingPage'\n\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    <div>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/timeismoney/\" element={<LandingPage/>} />\n          <Route path=\"/timeismoney/aa\" element={<SaveSingleYearPurchase/>} />\n          <Route path=\"/timeismoney/ab\" element={<DontSaveSingleYearPurchase/>} />\n          <Route path=\"/timeismoney/ba\" element={<SaveMultiYearPurchase/>} />\n          <Route path=\"/timeismoney/bb\" element={<DontSaveMultiYearPurchase/>} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}